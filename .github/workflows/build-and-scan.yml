name: CI - Code Scan, Build & Push Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'       # Run if frontend files change
      - 'backend/**'        # Run if backend files change
      - 'frontend/Dockerfile' # Run if frontend Dockerfile changes
      - 'backend/Dockerfile'  # Run if backend Dockerfile changes
      - '!K8s/**'           # Ignore changes in K8s
      - '!GCP_infra/**'     # Ignore changes in GCP Terraform files
      - '!VM_Instance/**'   # Ignore changes in VM Terraform files
      - '!README.md'        # Ignore README updates

jobs:
  checkout:
    name: "Stage 1 - Checkout Code"
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  code-scan:
    name: "Stage 2 - Code Scan (SonarQube)"
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run SonarQube Code Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=my-project
            -Dsonar.organization=my-org
            -Dsonar.host.url=http://34.41.33.191:9000

  build-frontend:
    name: "Stage 3 - Build Frontend Docker Image"
    runs-on: self-hosted
    needs: code-scan
    if: ${{ contains(toJson(github.event.commits.*.modified), 'frontend/') || contains(toJson(github.event.commits.*.modified), 'frontend/Dockerfile') }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Frontend Docker Image
        run: docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest frontend/

  build-backend:
    name: "Stage 4 - Build Backend Docker Image"
    runs-on: self-hosted
    needs: code-scan
    if: ${{ contains(toJson(github.event.commits.*.modified), 'backend/') || contains(toJson(github.event.commits.*.modified), 'backend/Dockerfile') }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Backend Docker Image
        run: docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend:latest backend/

  scan-frontend-image:
    name: "Stage 5 - Scan Frontend Docker Image (Trivy)"
    runs-on: self-hosted
    needs: build-frontend
    steps:
      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@v0.14.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest'
          format: 'table'
          severity: 'HIGH,CRITICAL'

  scan-backend-image:
    name: "Stage 6 - Scan Backend Docker Image (Trivy)"
    runs-on: self-hosted
    needs: build-backend
    steps:
      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@v0.14.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend:latest'
          format: 'table'
          severity: 'HIGH,CRITICAL'

  push-frontend-image:
    name: "Stage 7 - Push Frontend Docker Image"
    runs-on: self-hosted
    needs: scan-frontend-image
    steps:
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Frontend Docker Image
        run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  push-backend-image:
    name: "Stage 8 - Push Backend Docker Image"
    runs-on: self-hosted
    needs: scan-backend-image
    steps:
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Backend Docker Image
        run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
